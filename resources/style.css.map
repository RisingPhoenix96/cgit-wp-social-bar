{"version":3,"sources":["_media.scss","_main.scss"],"names":[],"mappings":"AAgFA,MACI,aAAc,CACd,cAAe,CACf,QAAS,CACT,SAAU,CACV,WAAY,CACZ,UAAW,CACX,uBAAwB,CACxB,WAAY,CAbZ,kCAKJ,MAUQ,uBAAwB,CA8C/B,CA7DG,kCAKJ,MAaQ,sBAAuB,CA2C9B,CA7DG,kCAKJ,MAgBQ,qBAAsB,CAwC7B,CA7DG,kCAKJ,MAmBQ,oBAAqB,CAqC5B,CA7DG,kCAKJ,MAuBQ,qBAAsB,CAiC7B,CA7DG,mCAKJ,MA0BQ,uBAAwB,CA8B/B,CA7DG,mCAKJ,MA6BQ,qBAAsB,CA2B7B,CA7DG,mCAKJ,MAiCQ,sBAAuB,CAuB9B,CA7DG,mCAKJ,MAoCQ,0BAA2B,CAoBlC,CA7DG,mCAKJ,MAuCQ,sBAAuB,CAiB9B,CA7DG,mCAKJ,MA0CQ,yBAA0B,CAcjC,CA7DG,mCAKJ,MA6CQ,8BAA+B,CAWtC,CA7DG,mCAKJ,MAgDQ,4BAA6B,CAQpC,CA7DG,mCAKJ,MAmDQ,uBAAwB,CAK/B,CA7DG,mCAKJ,MAsDQ,0BAA2B,CAElC,CC/HD,cACI,QAAS,CACT,mBAAa,CAAb,YAAa,CACb,6BAAmB,CAAnB,4BAAmB,CAAnB,kBAAmB,CACnB,cAAe,CACf,WAAY,CACZ,UAAW,CD4DX,kCClEJ,cASQ,2BAAsB,CAAtB,4BAAsB,CAAtB,qBAAsB,CACtB,MAAO,CACP,UAAW,CACX,OAAQ,CACR,YAAa,CACb,UAAW,CAgClB,CA9CD,sBAkBQ,WAAY,CACZ,SAAU,CACV,aAAc,CACd,WAAY,CACZ,iBAAkB,CD4CtB,kCClEJ,sBAyBY,WAAY,CACZ,UAAW,CAYlB,CAtCL,0BA8BY,gBAAiB,CACjB,iBAAkB,CAClB,MAAO,CACP,OAAQ,CACR,iBAAkB,CAClB,OAAQ,CACR,kCAAW,CAAX,0BAA2B,CD8BnC,kCClEJ,oBA0CY,OAAQ,CACR,SACJ,CACH,CAGL,wBACI,wBA1Dc,CAyDlB,6BAIQ,SAtDI,CAkDZ,4BAQQ,UAAW,CDUf,kCClBJ,4BAWY,UAAW,CAElB,CAbL,8BAgBQ,wBAAyC,CAC5C,oBAGD,wBA5EU,CA2Ed,yBAIQ,SAzEI,CAqEZ,wBAQQ,UAAW,CDTf,kCCCJ,wBAWY,UAAW,CAElB,CAbL,0BAgBQ,wBAAqC,CACxC,wBAGD,wBA9Fc,CA6FlB,6BAIQ,SA5FI,CAwFZ,4BAQQ,UAAW,CD5Bf,kCCoBJ,4BAWY,UAAW,CAElB,CAbL,8BAgBQ,wBAAyC,CAC5C,uBAGD,oBAhHa,CA+GjB,4BAIQ,SA/GI,CA2GZ,2BAQQ,UAAW,CD/Cf,kCCuCJ,2BAWY,UAAW,CAElB,CAbL,6BAgBQ,qBAAwC,CAC3C,uBAGD,wBAlIa,CAiIjB,4BAIQ,SAlII,CA8HZ,2BAQQ,UAAW,CDlEf,kCC0DJ,2BAWY,UAAW,CAElB,CAbL,6BAgBQ,wBAAwC,CAC3C,yBAGD,wBApJe,CAmJnB,8BAIQ,SArJI,CAiJZ,6BAQQ,UAAW,CDrFf,kCC6EJ,6BAWY,UAAW,CAElB,CAbL,+BAgBQ,wBAA0C,CAC7C,yBAGD,wBAtKe,CAqKnB,8BAIQ,SAxKI,CAoKZ,6BAQQ,UAAW,CDxGf,kCCgGJ,6BAWY,UAAW,CAElB,CAbL,+BAgBQ,wBAA0C","file":"style.css","sourcesContent":["// Breakpoints\r\n//\r\n// This is the default array of named breakpoints. If a variable with the same\r\n// name is declared earlier in the code, these values will be ignored.\r\n$media-breakpoints: (\r\n    pico:   320px,\r\n    nano:   480px,\r\n    micro:  640px,\r\n    milli:  800px,\r\n    normal: 960px,\r\n    kilo:   1120px,\r\n    mega:   1280px,\r\n    giga:   1440px,\r\n    tera:   1600px,\r\n    peta:   1760px,\r\n    exa:    1920px,\r\n    zetta:  2080px,\r\n    yotta:  2240px,\r\n    ronna:  2400px,\r\n    quecca: 2560px,\r\n) !default;\r\n\r\n// Media query\r\n//\r\n// Inserts a media query with min and/or max widths, optionally restricted to\r\n// particular media types (e.g. screen). If the min or max widths are zero or\r\n// false, they will be omitted from the media query. The default media type is\r\n// \"all\". The fourth argument allows you to append an arbitrary string to the\r\n// media query, e.g. \"and (min-height: 320px)\".\r\n//\r\n// @param mixed $min Length or named breakpoint used as min-width\r\n// @param mixed $max Length or named breakpoint used as max-width\r\n// @param string $media Media type, default \"all\"\r\n// @param string $after Additional media queries\r\n@mixin media-query($min, $max: null, $media: all, $after: null) {\r\n    $query: $media;\r\n\r\n    // If $min exists in the array of named breakpoints, assume it is a\r\n    // reference to that value and not a value itself.\r\n    @if map-get($media-breakpoints, $min) {\r\n        $min: map-get($media-breakpoints, $min);\r\n    }\r\n\r\n    // Ditto $max. When using named breakpoints with max-width media queries,\r\n    // subtract 1px from the length to avoid overlapping with min-width media\r\n    // queries.\r\n    @if map-get($media-breakpoints, $max) {\r\n        $max: map-get($media-breakpoints, $max);\r\n        $one-pixel: 1px;\r\n\r\n        // If the units are not pixels, they are probably ems or rems, so make\r\n        // the value to be subtracted as small as possible.\r\n        @if unit($max) != 'px' {\r\n            $one-pixel: 0.001;\r\n        }\r\n\r\n        $max: $max - $one-pixel;\r\n    }\r\n\r\n    // If $min is a length, append a min-width media query\r\n    @if type-of($min) == 'number' and $min != 0 {\r\n        $query: \"#{$query} and (min-width: #{$min})\";\r\n    }\r\n\r\n    // If $max is a length, append a min-width media query\r\n    @if type-of($max) == 'number' and $max != 0 {\r\n        $query: \"#{$query} and (max-width: #{$max})\";\r\n    }\r\n\r\n    // If $after is a string, append it to the media query\r\n    @if type-of($after) == 'string' {\r\n        $query: \"#{$query} #{$after}\";\r\n    }\r\n\r\n    // Write the media query\r\n    @media #{$query} {\r\n        @content;\r\n    }\r\n}\r\n\r\n.size {\r\n    display: block;\r\n    position: fixed;\r\n    top: 30px;\r\n    left: 30px;\r\n    height: 20px;\r\n    width: 20px;\r\n    background-color: orange;\r\n    z-index: 500;\r\n    @include media-query(pico){\r\n        background-color: yellow;\r\n    }\r\n    @include media-query(nano){\r\n        background-color: green /* green */;\r\n    }\r\n    @include media-query(micro){\r\n        background-color: blue /* blue */;\r\n    }\r\n    @include media-query(milli){\r\n        background-color: red;\r\n    }\r\n\r\n    @include media-query(normal){\r\n        background-color: cyan /* indigo */;\r\n    }\r\n    @include media-query(kilo){\r\n        background-color: violet;\r\n    }\r\n    @include media-query(mega){\r\n        background-color: pink;\r\n    }\r\n\r\n    @include media-query(giga){\r\n        background-color: CORAL /* indigo */;\r\n    }\r\n    @include media-query(tera){\r\n        background-color: ROSYBROWN;\r\n    }\r\n    @include media-query(peta){\r\n        background-color: Black;\r\n    }\r\n    @include media-query(exa){\r\n        background-color: cornsilk;\r\n    }\r\n    @include media-query(zetta){\r\n        background-color: rebeccapurple;\r\n    }\r\n    @include media-query(yotta){\r\n        background-color: yellowgreen;\r\n    }\r\n    @include media-query(ronna){\r\n        background-color: orchid;\r\n    }\r\n    @include media-query(quecca){\r\n        background-color: gainsboro;\r\n    }\r\n}","$facebook: #1877f2;\r\n$ebay: #e53238;\r\n$linkedin: #007bb5;\r\n$youtube: #ff0000;\r\n$twitter: #1da1f2;\r\n$instagram: #833ab4;\r\n$pinterest: #e60023;\r\n$white: #fff;\r\n\r\n.social-icons {\r\n    bottom: 0;\r\n    display: flex;\r\n    flex-direction: row;\r\n    position: fixed;\r\n    z-index: 200;\r\n    width: 100%;\r\n\r\n    @include media-query(micro) {\r\n        flex-direction: column;\r\n        left: 0;\r\n        right: auto;\r\n        top: 35%;\r\n        z-index: auto;\r\n        width: auto;\r\n    }\r\n\r\n    .single {\r\n        height: 65px;\r\n        width: 20%;\r\n        display: block;\r\n        font-size: 0;\r\n        position: relative;\r\n\r\n        @include media-query(micro) {\r\n            height: 55px;\r\n            width: 55px;\r\n        }\r\n\r\n        svg {\r\n            margin-left: auto;\r\n            margin-right: auto;\r\n            left: 0;\r\n            right: 0;\r\n            position: absolute;\r\n            top: 50%;\r\n            transform: translateY(-50%);\r\n        }\r\n    }\r\n\r\n    &.right {\r\n        @include media-query(micro) {\r\n            right: 0;\r\n            left: auto\r\n        }\r\n    }\r\n}\r\n\r\n.social-icons .facebook {\r\n    background-color: $facebook;\r\n\r\n    path{\r\n        fill:  $white;\r\n    }\r\n\r\n    svg {\r\n        width: 35px;\r\n\r\n        @include media-query(micro) {\r\n            width: 24px;\r\n        }\r\n    }\r\n\r\n    &:hover {\r\n        background-color: lighten($facebook, 10%);\r\n    }\r\n}\r\n.social-icons .ebay {\r\n    background-color: $ebay;\r\n\r\n    path{\r\n        fill:  $white;\r\n    }\r\n\r\n    svg {\r\n        width: 55px;\r\n\r\n        @include media-query(micro) {\r\n            width: 45px;\r\n        }\r\n    }\r\n\r\n    &:hover {\r\n        background-color: lighten($ebay, 10%);\r\n    }\r\n}\r\n.social-icons .linkedin {\r\n    background-color: $linkedin;\r\n\r\n    path{\r\n        fill:  $white;\r\n    }\r\n\r\n    svg {\r\n        width: 30px;\r\n\r\n        @include media-query(micro) {\r\n            width: 20px;\r\n        }\r\n    }\r\n\r\n    &:hover {\r\n        background-color: lighten($linkedin, 10%);\r\n    }\r\n}\r\n.social-icons .youtube {\r\n    background-color: $youtube;\r\n\r\n    path{\r\n        fill:  $white;\r\n    }\r\n\r\n    svg {\r\n        width: 38px;\r\n\r\n        @include media-query(micro) {\r\n            width: 28px;\r\n        }\r\n    }\r\n\r\n    &:hover {\r\n        background-color: lighten($youtube, 10%);\r\n    }\r\n}\r\n.social-icons .twitter {\r\n    background-color: $twitter;\r\n\r\n    path{\r\n        fill:  $white;\r\n    }\r\n\r\n    svg {\r\n        width: 34px;\r\n\r\n        @include media-query(micro) {\r\n            width: 24px;\r\n        }\r\n    }\r\n\r\n    &:hover {\r\n        background-color: lighten($twitter, 10%);\r\n    }\r\n}\r\n.social-icons .instagram {\r\n    background-color: $instagram;\r\n\r\n    path{\r\n        fill:  $white;\r\n    }\r\n\r\n    svg {\r\n        width: 34px;\r\n\r\n        @include media-query(micro) {\r\n            width: 24px;\r\n        }\r\n    }\r\n\r\n    &:hover {\r\n        background-color: lighten($instagram, 10%);\r\n    }\r\n}\r\n.social-icons .pinterest {\r\n    background-color: $pinterest;\r\n\r\n    path{\r\n        fill:  $white;\r\n    }\r\n\r\n    svg {\r\n        width: 35px;\r\n\r\n        @include media-query(micro) {\r\n            width: 30px;\r\n        }\r\n    }\r\n\r\n    &:hover {\r\n        background-color: lighten($pinterest, 10%);\r\n    }\r\n}"]}